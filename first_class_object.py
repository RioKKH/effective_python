#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
 ファーストクラスオブジェクト（First-class object）とは、
 プログラミング言語において、他の要素と同等の扱いを受けることが
 できるオブジェクトのことを指します。
 具体的には、以下の特性を持つオブジェクトをファーストクラス
 オブジェクトと言います:

   1. 変数への代入: オブジェクトを変数に代入することができます。
   2. データ構造への格納: オブジェクトをデータ構造（リスト、辞書など）
      に格納することができます。
   3. 関数の引数としての受け渡し: オブジェクトを関数の引数として
      渡すことができます。
   4. 関数の戻り値としての返却: オブジェクトを関数の戻り値として
      返すことができます。

ファーストクラスオブジェクトの特性を持つことで、オブジェクトは
非常に柔軟に扱えるようになります。例えば、関数を変数に代入したり、
関数を引数として別の関数に渡したりすることができます。

ファーストクラスオブジェクトの特性は、関数型プログラミングの
重要な基盤となっています。関数型プログラミングでは、関数をデータ
として扱い、関数の合成や高階関数（関数を引数として受け取る・戻り値
として返す関数）を利用することにより、柔軟でエレガントな
プログラミングスタイルを実現します。
"""

def multiply(x, y):
    return x * y

# 関数を変数に代入
my_function = multiply

# 関数をデータ構造に格納
function_list = [multiply, my_function]

# 関数を引数として渡す
def apply_operation(func, x, y):
    return func(x, y)

result = apply_operation(multiply, 3, 4) # Output: 12

# 関数を戻り値として返す
def get_multiplier():
    return multiply

multiplier_func = get_multiplier()
result = multiplier_func(2, 5) # Output: 10
